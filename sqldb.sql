
  CREATE TABLE "SYSTEM"."AGENCIA" 
   (	"ID_AGENCIA" NUMBER(*,0) NOT NULL ENABLE, 
	"NOMBRE_AGENCIA" VARCHAR2(4000 BYTE) NOT NULL ENABLE, 
	"DIRECCION_AGENCIA" VARCHAR2(4000 BYTE) NOT NULL ENABLE, 
	"ID_BANCO" NUMBER, 
	 CONSTRAINT "AGENCIA_PK" PRIMARY KEY ("ID_AGENCIA")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE, 
	 CONSTRAINT "FK_BANCO_AGENCIA" FOREIGN KEY ("ID_BANCO")
	  REFERENCES "SYSTEM"."BANCO" ("ID_BANCO") ENABLE
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;

  CREATE OR REPLACE TRIGGER "SYSTEM"."TRIG_AGENCIA_SEQ" 
BEFORE INSERT ON agencia FOR EACH ROW
BEGIN
	SELECT seq_agencia_idagencia.nextval 
	INTO :new.id_agencia 
	FROM dual;
END;
/

ALTER TRIGGER "SYSTEM"."TRIG_AGENCIA_SEQ" ENABLE;




  CREATE TABLE "SYSTEM"."BANCO" 
   (	"ID_BANCO" NUMBER(*,0) NOT NULL ENABLE, 
	"NOMBRE_BANCO" VARCHAR2(4000 BYTE) NOT NULL ENABLE, 
	 CONSTRAINT "BANCO_PK" PRIMARY KEY ("ID_BANCO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;

  CREATE OR REPLACE TRIGGER "SYSTEM"."TRIG_BANCO_SEQ" 
BEFORE INSERT ON banco FOR EACH ROW
BEGIN
	SELECT seq_banco_idbanco.nextval 
	INTO :new.id_banco 
	FROM dual;
END;
/
ALTER TRIGGER "SYSTEM"."TRIG_BANCO_SEQ" ENABLE;



  CREATE TABLE "SYSTEM"."CHEQUE" 
   (	"ID_CHEQUE" NUMBER NOT NULL ENABLE, 
	"FECHA" DATE, 
	"MONTO" NUMBER, 
	"ESTADO" VARCHAR2(100 BYTE), 
	"ID_CHEQUERA" NUMBER, 
	 CONSTRAINT "CHEQUE_PK" PRIMARY KEY ("ID_CHEQUE")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE, 
	 CONSTRAINT "FK_CHEQUERA_CHEQUE" FOREIGN KEY ("ID_CHEQUERA")
	  REFERENCES "SYSTEM"."CHEQUERA" ("ID_CHEQUERA") ENABLE
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;

  CREATE OR REPLACE TRIGGER "SYSTEM"."CHEQUE_TRG" 
BEFORE INSERT ON CHEQUE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_CHEQUE IS NULL THEN
      SELECT CHEQUE_SEQ.NEXTVAL INTO :NEW.ID_CHEQUE FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."CHEQUE_TRG" ENABLE;




  CREATE TABLE "SYSTEM"."CHEQUERA" 
   (	"ID_CHEQUERA" NUMBER NOT NULL ENABLE, 
	"ESTADO" VARCHAR2(20 BYTE), 
	"ID_CUENTA" NUMBER, 
	 CONSTRAINT "CHEQUERA_PK" PRIMARY KEY ("ID_CHEQUERA")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;

  CREATE OR REPLACE TRIGGER "SYSTEM"."CHEQUERA_TRG" 
BEFORE INSERT ON CHEQUERA 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID_CHEQUERA IS NULL THEN
      SELECT CHEQUERA_SEQ.NEXTVAL INTO :NEW.ID_CHEQUERA FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "SYSTEM"."CHEQUERA_TRG" ENABLE;




  CREATE TABLE "SYSTEM"."CUENTA" 
   (	"ID_CUENTA" NUMBER(*,0) NOT NULL ENABLE, 
	"CODIGO" VARCHAR2(4000 BYTE) NOT NULL ENABLE, 
	"NOMBRE" VARCHAR2(4000 BYTE) NOT NULL ENABLE, 
	"SALDO" VARCHAR2(4000 BYTE) NOT NULL ENABLE, 
	"ESTADO" VARCHAR2(4000 BYTE) NOT NULL ENABLE, 
	"TIPO_CUENTA" VARCHAR2(4000 BYTE), 
	"ID_AGENCIA" NUMBER(*,0) NOT NULL ENABLE, 
	"ID_USUARIO" NUMBER(*,0) NOT NULL ENABLE, 
	 CONSTRAINT "CUENTA_AGENCIA_FK" FOREIGN KEY ("ID_AGENCIA")
	  REFERENCES "SYSTEM"."AGENCIA" ("ID_AGENCIA") ENABLE, 
	 CONSTRAINT "CUENTA_USUARIO_FK" FOREIGN KEY ("ID_USUARIO")
	  REFERENCES "SYSTEM"."USUARIO" ("ID_USUARIO") ENABLE
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;

  CREATE OR REPLACE TRIGGER "SYSTEM"."TRIG_CUENTA_SEQ" 
BEFORE INSERT ON cuenta FOR EACH ROW
BEGIN
	SELECT seq_cuenta_idcuenta.nextval 
	INTO :new.id_cuenta
	FROM dual;
END;
/
ALTER TRIGGER "SYSTEM"."TRIG_CUENTA_SEQ" ENABLE;



  CREATE TABLE "SYSTEM"."TERMINAL" 
   (	"ID_TERMINAL" NUMBER(*,0) NOT NULL ENABLE, 
	"ID_AGENCIA" NUMBER(*,0), 
	 CONSTRAINT "TERMINAL_PK" PRIMARY KEY ("ID_TERMINAL")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE, 
	 CONSTRAINT "FK_AGENCIA_TERMINAL" FOREIGN KEY ("ID_AGENCIA")
	  REFERENCES "SYSTEM"."AGENCIA" ("ID_AGENCIA") ENABLE
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;


  CREATE TABLE "SYSTEM"."USUARIO" 
   (	"ID_USUARIO" NUMBER(*,0) NOT NULL ENABLE, 
	"NOMBRE_USUARIO" VARCHAR2(4000 BYTE) NOT NULL ENABLE, 
	"CONTRASENIA" VARCHAR2(4000 BYTE) NOT NULL ENABLE, 
	"NOMBRE_COMPLETO" VARCHAR2(4000 BYTE) NOT NULL ENABLE, 
	"DPI" VARCHAR2(4000 BYTE) NOT NULL ENABLE, 
	"CORREO" VARCHAR2(4000 BYTE), 
	"FOTO" VARCHAR2(4000 BYTE), 
	"ROL" VARCHAR2(4000 BYTE) NOT NULL ENABLE, 
	"AGENCIA_ID_AGENCIA" NUMBER(*,0), 
	"FIRMA" VARCHAR2(4000 BYTE), 
	 CONSTRAINT "USUARIO_PK" PRIMARY KEY ("ID_USUARIO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;

  CREATE OR REPLACE TRIGGER "SYSTEM"."TRIG_USUARIO_SEQ" 
BEFORE INSERT ON usuario FOR EACH ROW
BEGIN
	SELECT seq_usuario_idusuario.nextval 
	INTO :new.id_usuario
	FROM dual;
END;
/
ALTER TRIGGER "SYSTEM"."TRIG_USUARIO_SEQ" ENABLE;


ALTER TABLE AGENCIA ADD CONSTRAINT fk_banco_agencia FOREIGN KEY (ID_BANCO) REFERENCES BANCO (ID_BANCO);

ALTER TABLE TERMINAL ADD CONSTRAINT fk_agencia_terminal FOREIGN KEY (ID_AGENCIA) REFERENCES AGENCIA (ID_AGENCIA);

ALTER TABLE CUENTA  ADD CONSTRAINT fk_usuario_cuenta FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO (ID_USUARIO);

ALTER TABLE CHEQUERA ADD CONSTRAINT fk_cuenta_chequera FOREIGN KEY (ID_CUENTA) REFERENCES CUENTA(ID_CUENTA);

ALTER TABLE CHEQUE ADD CONSTRAINT fk_chequera_cheque FOREIGN KEY (ID_CHEQUERA) REFERENCES CHEQUERA(ID_CHEQUERA);

