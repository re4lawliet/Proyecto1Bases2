/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto1bases2;

import java.awt.image.BufferedImage;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import sun.misc.BASE64Encoder;

/**
 *
 * @author carlosmonterroso
 */
public class ABC_Usuario extends javax.swing.JFrame {

	int fila = 0;
	private String fotoPerfil="";
	private String fotoFirma="";
	
	public ABC_Usuario() {
		initComponents();
                actualizarTablaUsuarios();
		LabelTipoCuenta.setVisible(false);
                combo_Agencia();
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        CajaUsuario = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        CajaNombre = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        CajaPass = new javax.swing.JPasswordField();
        CajaConfirmePass = new javax.swing.JPasswordField();
        jLabel6 = new javax.swing.JLabel();
        CajaDPI = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        CajaCorreo = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        BotonSubirFoto = new javax.swing.JButton();
        BotonCrearUsuario = new javax.swing.JButton();
        ComboBoxAgencia = new javax.swing.JComboBox<>();
        LabelTipoCuenta = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        ComboBoxRol = new javax.swing.JComboBox<>();
        CajaBuscar = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        BotonAtras = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        BotonFirma = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("ABC USUARIO");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel2.setText("Usuario: \"Seleccione un nombre de Usuario\"");

        jLabel3.setText("Nombre Completo:");

        jLabel4.setText("Escriba una Contraseña:");

        jLabel5.setText("Confirme su contraseña:");

        jLabel6.setText("Numero de DPI:");

        jLabel7.setText("Correo Electronico:");

        jLabel8.setText("Foto de Usuario: Seleccione una Foto de su Compu:");

        BotonSubirFoto.setText("Subir");
        BotonSubirFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonSubirFotoActionPerformed(evt);
            }
        });

        BotonCrearUsuario.setText("Crear Usuario");
        BotonCrearUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonCrearUsuarioActionPerformed(evt);
            }
        });

        LabelTipoCuenta.setText("Seleccione la agencia asociada");

        jLabel11.setText("Seleccione el Rol de Este Usuario:");

        ComboBoxRol.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Cliente", "Receptor/Pagador", "Gerente de Agencia", "Auditor" }));
        ComboBoxRol.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComboBoxRolItemStateChanged(evt);
            }
        });
        ComboBoxRol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxRolActionPerformed(evt);
            }
        });

        jButton1.setText("Buscar");

        BotonAtras.setText("Atras");
        BotonAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonAtrasActionPerformed(evt);
            }
        });

        jButton2.setText("Eliminar Usuario");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel9.setText("Firma: Selecciones una Foto para Firma de Su compu:");

        BotonFirma.setText("Firma");
        BotonFirma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonFirmaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(CajaUsuario)
                                        .addComponent(jLabel3)
                                        .addComponent(CajaNombre)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel5)
                                        .addComponent(CajaPass)
                                        .addComponent(CajaConfirmePass)
                                        .addComponent(jLabel6)
                                        .addComponent(CajaDPI)
                                        .addComponent(jLabel7)
                                        .addComponent(CajaCorreo))
                                    .addComponent(jLabel8)
                                    .addComponent(BotonSubirFoto)))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(LabelTipoCuenta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(ComboBoxAgencia, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel11)
                                    .addComponent(ComboBoxRol, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(BotonCrearUsuario)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(BotonFirma))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(CajaBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BotonAtras)
                        .addGap(20, 20, 20))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(CajaBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1)
                        .addComponent(BotonAtras)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CajaUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CajaPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CajaConfirmePass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CajaNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CajaDPI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CajaCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BotonSubirFoto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel11)
                        .addGap(7, 7, 7)
                        .addComponent(ComboBoxRol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LabelTipoCuenta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ComboBoxAgencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                        .addComponent(BotonFirma)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BotonCrearUsuario)
                            .addComponent(jButton2))
                        .addContainerGap())
                    .addComponent(jScrollPane1)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BotonAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonAtrasActionPerformed
        
		Inicio.menu.setVisible(true);
		this.dispose();
    }//GEN-LAST:event_BotonAtrasActionPerformed

    private void ComboBoxRolItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComboBoxRolItemStateChanged
		switch (ComboBoxRol.getSelectedIndex()) {
			case 0: //sin tipo
				JOptionPane.showMessageDialog(null, "Seleccione un rol");
				LabelTipoCuenta.setVisible(false);
				ComboBoxAgencia.setVisible(false);
				break;
			case 1://tipo cliente
				LabelTipoCuenta.setVisible(false);
				ComboBoxAgencia.setVisible(false);
				break;
			case 2://receptor pagador
				LabelTipoCuenta.setVisible(true);
				ComboBoxAgencia.setVisible(true);
				break;
			case 3://Gerente de agencia
				LabelTipoCuenta.setVisible(true);
				ComboBoxAgencia.setVisible(true);
				break;
			default:
				break;
		}
    }//GEN-LAST:event_ComboBoxRolItemStateChanged

    private void BotonCrearUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonCrearUsuarioActionPerformed
        // BOTON PARA CREAR USUARIO
		try{
			Validaciones v = new Validaciones();
			//Obteniendo Datos
			String Usuario = CajaUsuario.getText();
			String Pass=CajaPass.getText();
			String ConfirmPass=CajaConfirmePass.getText();
			String Nombre=CajaNombre.getText();
			String DPI=CajaDPI.getText();
			String Correo=CajaCorreo.getText();
			String agencia = ((Agencia)ComboBoxAgencia.getSelectedItem()).getValue();
			Boolean esCorrecto=true;
			//Validando Datos
			if(v.esIdentificador(Usuario)){//----------------------------USUARIO
			}else{
				JOptionPane.showMessageDialog(null, "Nombre de Usuario invalido","ERROR",JOptionPane.ERROR_MESSAGE);
				esCorrecto=false;
			}
			if(v.esIdentificador(Pass)&&v.entraEnLimite(Pass, 8)){//--------PASS
			}else{
				JOptionPane.showMessageDialog(null, "Contraseña Invalida Debe usar letras y numeros","ERROR",JOptionPane.ERROR_MESSAGE);
				esCorrecto=false;
			}
			if(ConfirmPass.equals(Pass)){//-----------------------------Confirm PASS
			}else{
				JOptionPane.showMessageDialog(null, "Contraseñas no coinciden","ERROR",JOptionPane.ERROR_MESSAGE);
				esCorrecto=false;
			}
			if(v.esAlfanumerico(Nombre)){//-----------------------------NOMBRE	
			}else{
				JOptionPane.showMessageDialog(null, "Nombre Invalido","ERROR",JOptionPane.ERROR_MESSAGE);
				esCorrecto=false;
			}
			if(v.esNumero(DPI)){//-------------------------------------DPI	
			}else{
				JOptionPane.showMessageDialog(null, "DPI debe ser solo numeros sin espacio","ERROR",JOptionPane.ERROR_MESSAGE);
				esCorrecto=false;
			}
			if(v.esCorreo(Correo)){//-----------------------------------CORREO
			}else{
				JOptionPane.showMessageDialog(null, "Correo Invalido","ERROR",JOptionPane.ERROR_MESSAGE);
				esCorrecto=false;
			}
			if(!this.ExisteUsuario(Usuario)){//----------------------------USUARIO EXISTENTE
			}else{
				JOptionPane.showMessageDialog(null, "Usuario: '"+Usuario+"' No esta Disponible","ERROR",JOptionPane.ERROR_MESSAGE);
				esCorrecto=false;
			}
                        String foto = this.fotoPerfil;
			if(!this.fotoPerfil.equals("")){
			}else{
				JOptionPane.showMessageDialog(null, "Foto: No subida Escoja una Foto de Perfil para Finalizar","ERROR",JOptionPane.ERROR_MESSAGE);
				esCorrecto=false;
			}
			String fotoFirma = this.fotoFirma;
			if(!this.fotoFirma.equals("")){
			}else{
				JOptionPane.showMessageDialog(null, "Firma: No subida Escoja una imagen de Firma para Finalizar","ERROR",JOptionPane.ERROR_MESSAGE);
				esCorrecto=false;
			}
				
						
			//*********************************
			//***Si TODO SALE BIEN ***********
			//*********************************
			if(esCorrecto){
                            try{
                                BaseDeDatos bd = new BaseDeDatos();
                                Connection conn = bd.conexion();
                                if (conn != null) {
                                        String query = "INSERT INTO USUARIO (NOMBRE_USUARIO, CONTRASENIA, NOMBRE_COMPLETO, DPI, CORREO, FOTO, FIRMA, ROL, AGENCIA_ID_AGENCIA)"
                                                     + "VALUES('"+Usuario+"','"+Pass+"','"+Nombre+"','"+DPI+"','"+Correo+"','"+foto+"','"+fotoFirma+"','"+ComboBoxRol.getSelectedItem().toString()+"',"+agencia+")";
                                        System.out.println(query);
                                        Statement stmt = conn.createStatement();
                                        int count = stmt.executeUpdate(query);
                                        System.out.println(count + "filas fueron afectadas");
					JOptionPane.showMessageDialog(rootPane, "Usuario '"+Usuario+"' Creado Correctamente");
                                        actualizarTablaUsuarios();
                                } else {
                                        System.out.println("NO HAY CONEXION");
                                }
                            } catch (SQLException e) {
                                    System.err.format("SQL Error : %s\n%s", e.getSQLState(), e.getMessage());
                            }
			}
			
   
		}catch(Exception e){
			JOptionPane.showMessageDialog(rootPane, "Error al Crear Usuario: Status: "+e);
		}
    }//GEN-LAST:event_BotonCrearUsuarioActionPerformed

    private void ComboBoxRolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxRolActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboBoxRolActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        fila = jTable1.getSelectedRow();
        CajaUsuario.setText(jTable1.getValueAt(fila, 1).toString());
        CajaNombre.setText(jTable1.getValueAt(fila, 2).toString());
        CajaDPI.setText(jTable1.getValueAt(fila, 3).toString());
        CajaCorreo.setText(jTable1.getValueAt(fila, 4).toString());
        if(jTable1.getValueAt(fila, 5).toString().equals("Gerente de Agencia")){
            ComboBoxRol.setSelectedIndex(3);
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if(fila>=0){
            String id = jTable1.getValueAt(fila, 0).toString();
            try{
                String consulta = "DELETE FROM USUARIO WHERE ID_USUARIO = " + id;
                BaseDeDatos db = new BaseDeDatos();
                Connection conn = db.conexion();
                if (conn != null) {
                        Statement stmt = conn.createStatement();
                        int count = stmt.executeUpdate(consulta);
                        System.out.println(count + "filas fueron afectadas");
			JOptionPane.showMessageDialog(rootPane, "Usuario eliminado correctamente");
                        actualizarTablaUsuarios();
                } else {
                        System.out.println("NO HAY CONEXION");
                }
            }catch(Exception e){  
                JOptionPane.showMessageDialog(null,"Error al llenar tabla de clientes\nClase: Principal -> 2721\nExcepcion: "+e,"ERROR", JOptionPane.ERROR_MESSAGE);
            } 
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void BotonSubirFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonSubirFotoActionPerformed
        // BOTON DE SUBIR FOTO
		JFileChooser fc = new JFileChooser();
		fc.setDialogTitle("Buscar foto o Imagen");
		
		if(fc.showOpenDialog(this)==JFileChooser.APPROVE_OPTION){
			File archivo= new File(fc.getSelectedFile().toString());
			StringBuilder path = new StringBuilder();
			path.append(fc.getSelectedFile().toString());
			String imageBase64 = null;
			byte[] base64EncodedImage= null;
			BASE64Encoder encoder = new BASE64Encoder();
			try {
				base64EncodedImage = loadImage64(path.toString());
				if(base64EncodedImage != null){
					imageBase64 = encoder.encodeBuffer(base64EncodedImage);
					if(imageBase64 != null && !imageBase64.trim().equals("")){
						//La envías a tu servidor
						JOptionPane.showMessageDialog(rootPane,"La Foto Subida es:"+ path.toString()+"leng: "+imageBase64.trim().length());
						String base64=imageBase64.trim();
						this.fotoPerfil=base64;
						
						
						byte[] btDataFile = new sun.misc.BASE64Decoder().decodeBuffer(base64);
						BufferedImage image = ImageIO.read(new ByteArrayInputStream(btDataFile));
						JOptionPane.showMessageDialog(null, "", "Image", 
								JOptionPane.INFORMATION_MESSAGE, 
								new ImageIcon(image));
					}
				}
			}catch(Exception e){

			}
		}
		 
    }//GEN-LAST:event_BotonSubirFotoActionPerformed

    private void BotonFirmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonFirmaActionPerformed
        // Boton de Foto para Firma
		
			JFileChooser fc = new JFileChooser();
		fc.setDialogTitle("Buscar foto o Imagen");
		
		if(fc.showOpenDialog(this)==JFileChooser.APPROVE_OPTION){
			File archivo= new File(fc.getSelectedFile().toString());
			StringBuilder path = new StringBuilder();
			path.append(fc.getSelectedFile().toString());
			String imageBase64 = null;
			byte[] base64EncodedImage= null;
			BASE64Encoder encoder = new BASE64Encoder();
			try {
				base64EncodedImage = loadImage64(path.toString());
				if(base64EncodedImage != null){
					imageBase64 = encoder.encodeBuffer(base64EncodedImage);
					if(imageBase64 != null && !imageBase64.trim().equals("")){
						//La envías a tu servidor
						JOptionPane.showMessageDialog(rootPane,"La Foto Subida de Firma ES:"+ path.toString()+"leng: "+imageBase64.trim().length());
						String base64=imageBase64.trim();
						this.fotoFirma=base64;
						
						
						byte[] btDataFile = new sun.misc.BASE64Decoder().decodeBuffer(base64);
						BufferedImage image = ImageIO.read(new ByteArrayInputStream(btDataFile));
						JOptionPane.showMessageDialog(null, "", "Image", 
								JOptionPane.INFORMATION_MESSAGE, 
								new ImageIcon(image));
					}
				}
			}catch(Exception e){

			}
		}
    }//GEN-LAST:event_BotonFirmaActionPerformed
	
    public byte[] loadImage64(String url)throws Exception{

	File file= new File(url.toString());
	if(file.exists()){
		int lenght = (int)file.length();
		BufferedInputStream reader = new BufferedInputStream(new FileInputStream(file));
		byte[] bytes = new byte[lenght];
		reader.read(bytes, 0, lenght);
		reader.close();
		return bytes;
	}else{
		JOptionPane.showMessageDialog(null,"Recurso no Encontrado","ERROR", JOptionPane.ERROR_MESSAGE);
		return null;
	}
	}
            
    
    public void actualizarTablaUsuarios(){
        BaseDeDatos db = new BaseDeDatos();
        String[] columnNames = {"ID","USUARIO","NOMBRE","DPI","CORREO","ROL","AGENCIA"};
        Object[][] dataVacia = {};
        DefaultTableModel modelo = new DefaultTableModel(dataVacia, columnNames);
        String consulta = "SELECT * FROM USUARIO";
        try{
            Connection conn = db.conexion();
            if (conn != null) {
                    Statement stmt = conn.createStatement();
                    ResultSet rs = stmt.executeQuery(consulta);
                    while(rs.next()){
                        Object[] newRowData = {rs.getString("ID_USUARIO"),rs.getString("NOMBRE_USUARIO"),rs.getString("NOMBRE_COMPLETO"),rs.getString("DPI"),rs.getString("CORREO"),rs.getString("ROL"),rs.getString("AGENCIA_ID_AGENCIA")};
                        modelo.addRow(newRowData);
                    }
            } else {
                    System.out.println("NO HAY CONEXION");
            }
        }catch(Exception e){  
            JOptionPane.showMessageDialog(null,"Error al llenar tabla de clientes\nClase: Principal -> 2721\nExcepcion: "+e,"ERROR", JOptionPane.ERROR_MESSAGE);
        } 
        jTable1.setModel(modelo);
    }
	
    public Boolean ExisteUsuario(String User){
		
		BaseDeDatos db = new BaseDeDatos();
		String[] columnNames = {"ID","USUARIO","NOMBRE","DPI","CORREO","ROL","AGENCIA"};
		Object[][] dataVacia = {};
		DefaultTableModel modelo = new DefaultTableModel(dataVacia, columnNames);
		String consulta = "SELECT * FROM USUARIO";
		
		try{
			Connection conn = db.conexion();
			if (conn != null) {
				Statement stmt = conn.createStatement();
				ResultSet rs = stmt.executeQuery(consulta);
				while(rs.next()){

					if(rs.getString("NOMBRE_USUARIO").equals(User)){
						return true;		
					}	
				}
			} else {
				System.out.println("NO HAY CONEXION");
			}
		}catch(Exception e){  
			JOptionPane.showMessageDialog(null,"Error al llenar tabla de clientes\nClase: Principal -> 2721\nExcepcion: "+e,"ERROR", JOptionPane.ERROR_MESSAGE);
			return true;
		}
		return false;
	}
		
    
    public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(ABC_Usuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(ABC_Usuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(ABC_Usuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(ABC_Usuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new ABC_Usuario().setVisible(true);
			}
		});
	}
	
	
    public void combo_Agencia(){
        //llenar combobox1 de DPI de clientes
        BaseDeDatos db = new BaseDeDatos();
        Vector model = new Vector();
        String consulta = "SELECT id_agencia, nombre_agencia from agencia";

        try{
            Connection conn = db.conexion();
            Statement stmt = conn.createStatement();
            ResultSet res = stmt.executeQuery(consulta);
            while(res.next()){
                Agencia p = new Agencia();
                p.id_agencia = res.getString("id_agencia");
                p.nombre_agencia = res.getString("nombre_agencia");
                model.addElement(p);
                                
            }
            ComboBoxAgencia.setModel(new DefaultComboBoxModel(model));
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,"Error al llenar agencias\nExcepcion: "+e,"ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonAtras;
    private javax.swing.JButton BotonCrearUsuario;
    private javax.swing.JButton BotonFirma;
    private javax.swing.JButton BotonSubirFoto;
    private javax.swing.JTextField CajaBuscar;
    private javax.swing.JPasswordField CajaConfirmePass;
    private javax.swing.JTextField CajaCorreo;
    private javax.swing.JTextField CajaDPI;
    private javax.swing.JTextField CajaNombre;
    private javax.swing.JPasswordField CajaPass;
    private javax.swing.JTextField CajaUsuario;
    private javax.swing.JComboBox<String> ComboBoxAgencia;
    private javax.swing.JComboBox<String> ComboBoxRol;
    private javax.swing.JLabel LabelTipoCuenta;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
