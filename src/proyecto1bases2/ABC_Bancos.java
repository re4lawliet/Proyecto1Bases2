/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto1bases2;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author carlosmonterroso
 */
public class ABC_Bancos extends javax.swing.JFrame {

	public int fila=0;
	/**
	 * Creates new form ABC_Bancos
	 */
	public ABC_Bancos() {
		initComponents();
		actualizarTablaBancos();
	}

	/**
	 * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        CajaBuscar = new javax.swing.JTextField();
        BotonBuscar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        CajaNombre = new javax.swing.JTextField();
        BotonCrearBanco = new javax.swing.JButton();
        BotonAtras = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("ABC de BANCOS: ");

        BotonBuscar.setText("Buscar");
        BotonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonBuscarActionPerformed(evt);
            }
        });

        jLabel2.setText("Ingrese el Nombre del Banco");

        BotonCrearBanco.setText("Crear Banco");
        BotonCrearBanco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonCrearBancoActionPerformed(evt);
            }
        });

        BotonAtras.setText("Atras");
        BotonAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonAtrasActionPerformed(evt);
            }
        });

        jButton1.setText("Eliminar Banco");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(CajaNombre))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(BotonCrearBanco, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 116, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(CajaBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BotonBuscar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 148, Short.MAX_VALUE)
                                .addComponent(BotonAtras)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CajaBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BotonBuscar)
                            .addComponent(BotonAtras))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(35, 35, 35)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CajaNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(BotonCrearBanco)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BotonAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonAtrasActionPerformed
        
		Inicio.menu.setVisible(true);
		this.dispose();
    }//GEN-LAST:event_BotonAtrasActionPerformed

    private void BotonCrearBancoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonCrearBancoActionPerformed
        // BotonCrear Banco
		
		Validaciones v = new Validaciones();
		//Obteniendo Datos
		String NombreBanco=CajaNombre.getText();
		
		Boolean esCorrecto=true;
		if(v.esAlfanumerico(NombreBanco)){
		
		}else{
			JOptionPane.showMessageDialog(null, "Nombre de Banco Invalido  LLeba solo letras y numeros","ERROR",JOptionPane.ERROR_MESSAGE);
			esCorrecto=false;
		}
		
		//Si todo esta Bien
		if(esCorrecto){
                try{
                    BaseDeDatos bd = new BaseDeDatos();
                    Connection conn = bd.conexion();
                    if (conn != null) {
                            String query = "INSERT INTO BANCO (NOMBRE_BANCO)"
                                         + "VALUES('"+NombreBanco+"')";
                            System.out.println(query);
                            Statement stmt = conn.createStatement();
                            int count = stmt.executeUpdate(query);
                            System.out.println(count + "filas fueron afectadas");
			    JOptionPane.showMessageDialog(rootPane, "Banco Creado Exitosamente");
			    this.actualizarTablaBancos();
                    } else {
                            System.out.println("NO HAY CONEXION");
                    }
                } catch (SQLException e) {
                        System.err.format("SQL Error : %s\n%s", e.getSQLState(), e.getMessage());
                }
            }
		
    }//GEN-LAST:event_BotonCrearBancoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
	if(fila>=0){
            String id = jTable1.getValueAt(fila, 0).toString();
            try{
                String consulta = "DELETE FROM BANCO WHERE ID_BANCO = " + id;
                BaseDeDatos db = new BaseDeDatos();
                Connection conn = db.conexion();
                if (conn != null) {
                        Statement stmt = conn.createStatement();
                        int count = stmt.executeUpdate(consulta);
                        System.out.println(count + "filas fueron afectadas");
			JOptionPane.showMessageDialog(rootPane, "Banco eliminado correctamente");
                        actualizarTablaBancos();
                } else {
                        System.out.println("NO HAY CONEXION");
                }
            }catch(Exception e){  
                JOptionPane.showMessageDialog(null,"Error al llenar tabla de clientes\nClase: Principal -> 2721\nExcepcion: "+e,"ERROR", JOptionPane.ERROR_MESSAGE);
            } 
	}
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
		fila = jTable1.getSelectedRow();

		CajaNombre.setText(jTable1.getValueAt(fila, 1).toString());
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void BotonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonBuscarActionPerformed
            String id = CajaBuscar.getText();
            Validaciones v = new Validaciones();
            if(v.esAlfanumerico(id)){
                String[] columnNames = {"ID","NOMBRE"};
            Object[][] dataVacia = {};
            DefaultTableModel modelo = new DefaultTableModel(dataVacia, columnNames);
            try{
                
                
                String consulta = "SELECT * FROM BANCO WHERE NOMBRE_BANCO = '" + id + "'";
                BaseDeDatos db = new BaseDeDatos();
                Connection conn = db.conexion();
                if (conn != null) {
                        Statement stmt = conn.createStatement();
                        ResultSet rs = stmt.executeQuery(consulta);
                        while(rs.next()){
                            Object[] newRowData = {rs.getString("ID_BANCO"),rs.getString("NOMBRE_BANCO")};
                            modelo.addRow(newRowData);
                        }
                } else {
                        System.out.println("NO HAY CONEXION");
                }
            }catch(Exception e){  
                JOptionPane.showMessageDialog(null,"Error al buscar banco \n"+e,"ERROR", JOptionPane.ERROR_MESSAGE);
            } 
            jTable1.setModel(modelo);
            }else{
                JOptionPane.showMessageDialog(null, "ERROR, el Nombre debe ser Alfanumerico");
            }
                    
            
    }//GEN-LAST:event_BotonBuscarActionPerformed

	
	public void actualizarTablaBancos(){
        BaseDeDatos db = new BaseDeDatos();
        String[] columnNames = {"ID","NOMBRE"};
        Object[][] dataVacia = {};
        DefaultTableModel modelo = new DefaultTableModel(dataVacia, columnNames);
        String consulta = "SELECT * FROM BANCO";
        try{
            Connection conn = db.conexion();
            if (conn != null) {
                    Statement stmt = conn.createStatement();
                    ResultSet rs = stmt.executeQuery(consulta);
                    while(rs.next()){
                        Object[] newRowData = {rs.getString("ID_BANCO"),rs.getString("NOMBRE_BANCO")};
                        modelo.addRow(newRowData);
                    }
            } else {
                    System.out.println("NO HAY CONEXION");
            }
        }catch(Exception e){  
            JOptionPane.showMessageDialog(null,"Error al llenar tabla de Bancos\nClase: Principal -> 2721\nExcepcion: "+e,"ERROR", JOptionPane.ERROR_MESSAGE);
        } 
        jTable1.setModel(modelo);
        
    }
	
	
	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(ABC_Bancos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(ABC_Bancos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(ABC_Bancos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(ABC_Bancos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new ABC_Bancos().setVisible(true);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonAtras;
    private javax.swing.JButton BotonBuscar;
    private javax.swing.JButton BotonCrearBanco;
    private javax.swing.JTextField CajaBuscar;
    private javax.swing.JTextField CajaNombre;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
